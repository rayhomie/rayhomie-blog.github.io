(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{380:function(a,s,t){"use strict";t.r(s);var e=t(42),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[a._v("#")]),a._v(" Docker")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.bilibili.com/video/BV1R4411F7t9",target:"_blank",rel:"noopener noreferrer"}},[a._v("学习途径"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("docker是一个开源的应用"),t("strong",[a._v("容器")]),a._v("引擎，不是一个虚拟机，但是实现了"),t("strong",[a._v("虚拟机的资源隔离")]),a._v("。")]),a._v(" "),t("h2",{attrs:{id:"核心概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#核心概念"}},[a._v("#")]),a._v(" 核心概念")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/b42fb2c54fd84cee9f6aab8d054c2ac4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTIyMTAzNg==,size_16,color_FFFFFF,t_70",alt:"请添加图片描述"}})]),a._v(" "),t("p",[a._v("镜像：创建虚拟机前需要下载一些系统预设环境软件（差不多就是镜像）")]),a._v(" "),t("p",[a._v("容器：类比一个正在运行中的一个虚拟机")]),a._v(" "),t("p",[a._v("Dockerfile：一个配置文件，用于描述指定一个镜像如何构建环境。")]),a._v(" "),t("p",[a._v("远程仓库：保存着很多公有的镜像（包括Ubuntu镜像、Nginx镜像、MySQL镜像、Tomcat镜像等）当然也可以将我们自己搭建的镜像通过push上传上去。")]),a._v(" "),t("h2",{attrs:{id:"步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#步骤"}},[a._v("#")]),a._v(" 步骤")]),a._v(" "),t("p",[a._v("我们使用"),t("a",{attrs:{href:"https://labs.play-with-docker.com",target:"_blank",rel:"noopener noreferrer"}},[a._v("Play With Docker网站"),t("OutboundLink")],1),a._v("进行操作演示：")]),a._v(" "),t("h3",{attrs:{id:"_1】通过远程仓库下载镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1】通过远程仓库下载镜像"}},[a._v("#")]),a._v(" 1】通过远程仓库下载镜像")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#下载nginx镜像 等价于 docker pull nginx:latest")]),a._v("\ndocker pull nginx\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#下载node镜像 等价于 docker pull nginx:latest")]),a._v("\ndocker pull node \n")])])]),t("h3",{attrs:{id:"_2】查看我们本地有哪些镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2】查看我们本地有哪些镜像"}},[a._v("#")]),a._v(" 2】查看我们本地有哪些镜像")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看本地镜像")]),a._v("\ndocker images\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#REPOSITORY   TAG       IMAGE ID       CREATED        SIZE")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#node         latest    8f1b7f0dfc2f   25 hours ago   907MB")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#nginx        latest    08b152afcfae   29 hours ago   133MB")]),a._v("\n")])])]),t("h3",{attrs:{id:"_3】运行镜像到容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3】运行镜像到容器"}},[a._v("#")]),a._v(" 3】运行镜像到容器")]),a._v(" "),t("p",[a._v("通过run指令，将镜像运行成一个正在运行的容器（虚拟机）")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#运行镜像到容器(通过参数可以指定他的行为：-d让它后台运行不要阻塞住shell指令窗口；-p来指定内外端口映射，这里是将本地端口80和该容器端口80做一个简单的映射，此时我们就可以通过访问本地的80号端口访问到该容器的80端口；通过--name参数来指定容器的名字)")]),a._v("\ndocker run -d -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v(":80 --name myNginx nginx \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#下面是另起容器指定本地端口81映射到该容器端口80，此时我们就可以通过访问本地的81号端口访问到该容器的80端口")]),a._v("\ndocker run -d -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("81")]),a._v(":80 nginx\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#下面是运行的容器id")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#1b6c5375b4c693d9f953e4fbfaaf1fad34445bb2799c8205e2d14ad659acc11c")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看在新开的docker容器中运行node指令")]),a._v("\ndocker run node -v \n\n")])])]),t("h3",{attrs:{id:"_4】查看正在运行的容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4】查看正在运行的容器"}},[a._v("#")]),a._v(" 4】查看正在运行的容器")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                NAMES")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('#84bf60fea375   nginx     "/docker-entrypoint.…"   8 seconds ago    Up 7 seconds    0.0.0.0:81->80/tcp   serene_galileo')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('#1b6c5375b4c6   nginx     "/docker-entrypoint.…"   12 minutes ago   Up 12 minutes   0.0.0.0:80->80/tcp   exciting_wilson')]),a._v("\n")])])]),t("h3",{attrs:{id:"_5】进入指定的容器进行操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5】进入指定的容器进行操作"}},[a._v("#")]),a._v(" 5】进入指定的容器进行操作")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#在指定容器中开启一个交互模式的终端:")]),a._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it 84bf60fea375 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#退出当前交互终端")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v("\n")])])]),t("h3",{attrs:{id:"_6】进入到nginx服务器的index-html目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6】进入到nginx服务器的index-html目录"}},[a._v("#")]),a._v(" 6】进入到Nginx服务器的index.html目录")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /usr/share/nginx/html/\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#50x.html index.html")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看文件内容")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" index.html\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#修改指定文件内容")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" hello world "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" index.html\n\n")])])]),t("h3",{attrs:{id:"_7】强制删除容器和镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7】强制删除容器和镜像"}},[a._v("#")]),a._v(" 7】强制删除容器和镜像")]),a._v(" "),t("p",[a._v("需要先退出容器的交互命令终端，再docker ps查看")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看所有运行的容器")]),a._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#强制删除指定容器")]),a._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" -f 84bf60fea375\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#停掉运行的容器（后面跟的是容器name）")]),a._v("\ndocker stop gitlab\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#重启容器（后面跟的是容器name）")]),a._v("\ndocker restart gitlab\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看所有本地镜像")]),a._v("\ndocker images\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#删除本地的nginx镜像")]),a._v("\ndocker rmi nginx\n")])])]),t("h3",{attrs:{id:"_8】将指定容器运行环境提交成一个镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8】将指定容器运行环境提交成一个镜像"}},[a._v("#")]),a._v(" 8】将指定容器运行环境提交成一个镜像")]),a._v(" "),t("p",[a._v("也就是说可以使用commit命令将指定容器环境保存成一个本地镜像（预设），下次可以直接使用。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看正在运行中的容器")]),a._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                NAMES")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('#48b418179a8d   nginx     "/docker-entrypoint.…"   19 seconds ago   Up 18 seconds   0.0.0.0:81->80/tcp   gallant_burnell')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('#14a5d72d98b4   nginx     "/docker-entrypoint.…"   30 seconds ago   Up 29 seconds   0.0.0.0:80->80/tcp   stoic_poincare')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#提交容器环境保存为一个本地镜像（预设）")]),a._v("\ndocker commit 48b418179a8d custom_image\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看本地镜像")]),a._v("\ndocker images\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#REPOSITORY     TAG       IMAGE ID       CREATED          SIZE")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#custom_image   latest    cb07d305a2ee   24 seconds ago   133MB")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#nginx          latest    08b152afcfae   40 hours ago     133MB")]),a._v("\n")])])]),t("h3",{attrs:{id:"_9】dockerfile来构建镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9】dockerfile来构建镜像"}},[a._v("#")]),a._v(" 9】Dockerfile来构建镜像")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#创建一个网页入口文件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" index.html\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#创建一个dockerfile文件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" Dockerfile\n")])])]),t("p",[a._v("写Dockerfile文件：")]),a._v(" "),t("ul",[t("li",[a._v("FROM指定docker构建的基础镜像，这里是基于nginx镜像构建")]),a._v(" "),t("li",[a._v("ADD将当前目录下的所有文件拷贝到nginx的index.html目录下（当前端dist文件夹打包好之后，我们也就需要把dist文件夹下的内容拷贝到对应nginx目录下。这样用户才可以通过外部访问到nginx服务器上的前端项目）")])]),a._v(" "),t("div",{staticClass:"language-dockerfile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" nginx\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ADD")]),a._v(" ./ /usr/share/nginx/html\n")])])]),t("p",[a._v("build命令构建镜像：")]),a._v(" "),t("ul",[t("li",[a._v("dockerfile_image是构建的镜像的名字")]),a._v(" "),t("li",[a._v("后面需要加个"),t("code",[a._v(".")]),a._v("指定的是当前目录下的Dockerfile去构建")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#使用Dockerfile去构建镜像")]),a._v("\ndocker build -t dockerfile_image "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看本地镜像")]),a._v("\ndocker images\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#将镜像跑在一个容器中，并指定本地100端口映射到该容器的80端口，此时我们就可以通过访问本地的100号端口访问到该容器的80端口")]),a._v("\ndocker run -d -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),a._v(":80 dockerfile_image\n")])])]),t("h3",{attrs:{id:"_10】-将镜像保存为tar压缩文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10】-将镜像保存为tar压缩文件"}},[a._v("#")]),a._v(" 10】 将镜像保存为tar压缩文件")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看所有本地镜像")]),a._v("\ndocker images\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#将名为nginx的本地镜像保存为一个名为nginx.tar的压缩文件")]),a._v("\ndocker save nginx "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" nginx.tar\n")])])]),t("h3",{attrs:{id:"_11】将tar压缩文件加载成镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11】将tar压缩文件加载成镜像"}},[a._v("#")]),a._v(" 11】将tar压缩文件加载成镜像")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看当前目录所有文件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#nginx.tar")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#将tar压缩文件加载成镜像")]),a._v("\ndocker load "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" nginx.tar\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看所有本地镜像")]),a._v("\ndocker images\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);