(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{400:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"一、redux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、redux"}},[t._v("#")]),t._v(" 一、redux")]),t._v(" "),a("h3",{attrs:{id:"_1】使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1】使用场景"}},[t._v("#")]),t._v(" 1】使用场景")]),t._v(" "),a("p",[t._v("React 只是 DOM 的一个抽象层，并不是 Web 应用的完整解决方案。有两个方面，它没涉及。")]),t._v(" "),a("ul",[a("li",[t._v("代码结构")]),t._v(" "),a("li",[t._v("组件之间通信（所有组件不限于有关系的组件）")])]),t._v(" "),a("p",[t._v("对于大型的复杂应用来说，这两方面恰恰是最关键的。因此，只用 React 没法写大型应用。")]),t._v(" "),a("p",[t._v("为了解决这个问题，2014年 Facebook 提出了 "),a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/01/flux.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Flux"),a("OutboundLink")],1),t._v(" 架构的概念，引发了很多的实现。2015年，"),a("a",{attrs:{href:"https://github.com/reactjs/redux",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redux"),a("OutboundLink")],1),t._v(" 出现，将 Flux 与函数式编程结合一起，很短时间内就成为了最热门的前端架构。")]),t._v(" "),a("p",[t._v('"'),a("strong",[t._v("只有遇到 React 实在解决不了的问题，你才需要 Redux 。")]),t._v('"')]),t._v(" "),a("p",[t._v("①简单说，如果你的"),a("strong",[t._v("UI层非常简单，没有很多互动")]),t._v("，Redux 就是不必要的，用了反而增加复杂性。")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("用户的使用方式非常简单")]),t._v(" "),a("li",[t._v("用户之间没有协作")]),t._v(" "),a("li",[t._v("不需要与服务器大量交互，也没有使用 WebSocket")]),t._v(" "),a("li",[t._v("视图层（View）只从单一来源获取数据")])])]),t._v(" "),a("p",[t._v("②从组件角度看，如果你的应用有以下场景，可以考虑使用 Redux。")]),t._v(" "),a("blockquote",[a("ul",[a("li",[a("strong",[t._v("某个组件的状态，需要共享")])]),t._v(" "),a("li",[t._v("某个状态需要在任何地方都可以拿到（"),a("strong",[t._v("全局使用")]),t._v("）")]),t._v(" "),a("li",[t._v("一个组件需要"),a("strong",[t._v("改变全局")]),t._v("状态")]),t._v(" "),a("li",[t._v("一个组件需要"),a("strong",[t._v("改变另一个组件的状态")])])])]),t._v(" "),a("p",[t._v("发生上面情况时，如果不使用 Redux 或者其他状态管理工具，不按照一定规律处理状态的读写，代码很快就会变成一团乱麻。你需要一种机制，可以在"),a("strong",[t._v("同一个地方查询状态、改变状态、传播状态的变化")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"_2】设计思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2】设计思想"}},[t._v("#")]),t._v(" 2】设计思想")]),t._v(" "),a("p",[t._v("Redux 的设计思想很简单，就两句话。")]),t._v(" "),a("blockquote",[a("p",[t._v("（1）"),a("strong",[t._v("Web 应用是一个状态机，视图与状态是一一对应的。")])]),t._v(" "),a("p",[t._v("（2）"),a("strong",[t._v("所有的状态，保存在一个对象里面。")])])]),t._v(" "),a("p",[t._v("请务必记住这两句话，下面就是详细解释。")]),t._v(" "),a("p",[t._v("Redux是一个"),a("strong",[t._v("可预测性")]),t._v("（我们给一个固定的输入，那么必定可以得到一个相应的结果）的状态管理容器。")]),t._v(" "),a("p",[a("strong",[t._v("可以集中管理react中多个组件的状态。")])]),t._v(" "),a("h4",{attrs:{id:"三大原则："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三大原则："}},[t._v("#")]),t._v(" 三大原则：")]),t._v(" "),a("p",[t._v("1."),a("strong",[t._v("单一数据源")]),t._v("：整个"),a("code",[t._v("react")]),t._v("中的"),a("code",[t._v("state")]),t._v("状态都会被统一管理到"),a("code",[t._v("store")]),t._v("仓库中。("),a("strong",[t._v("单一状态树")]),t._v(")。"),a("code",[t._v("store")]),t._v("中的数据结构往往是个给应用使用的深度嵌套的对象。")]),t._v(" "),a("p",[t._v("2."),a("strong",[t._v("state是只读的")]),t._v("：我们"),a("strong",[t._v("不能够直接改变state")]),t._v("状态而是要通过触发"),a("code",[t._v("redux")]),t._v("中的特定方法进行修改。（"),a("code",[t._v("store.dispatch()")]),t._v("是 "),a("code",[t._v("View")]),t._v(" 发出 "),a("code",[t._v("Action")]),t._v(" 的"),a("strong",[t._v("唯一方法")]),t._v("。）")]),t._v(" "),a("ul",[a("li",[t._v("store 对象本身只有4个简单的方法作为 API:\n"),a("ul",[a("li",[a("code",[t._v("store.dispatch(action)")])]),t._v(" "),a("li",[a("code",[t._v("store.subscribe(listener)")])]),t._v(" "),a("li",[a("code",[t._v("store.getState()")])]),t._v(" "),a("li",[a("code",[t._v("replaceReducer(nextReducer)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("dispatch()")]),t._v(" 方法发送一个对象给 Redux ，这个对象就是 "),a("code",[t._v("action")]),t._v("。"),a("code",[t._v("action")]),t._v("可以说是一个带着 "),a("code",[t._v("type")]),t._v(" 属性和其他数据的载体(用来更新"),a("code",[t._v("state")]),t._v(")，然后再提交到"),a("code",[t._v("reducer")]),t._v("更新"),a("code",[t._v("state")]),t._v("。 注意 "),a("code",[t._v("type")]),t._v(" 属性的值，设计"),a("code",[t._v("action")]),t._v("对象时你要给它命名赋值。")])])])])])]),t._v(" "),a("p",[t._v("3.使用"),a("strong",[t._v("纯函数来执行修改操作")]),t._v("：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("正如之前说的，Redux不允许应用直接修改"),a("code",[t._v("state")]),t._v("。它要求使用载"),a("code",[t._v("action")]),t._v(" 来描述"),a("code",[t._v("state")]),t._v("的变化，通过发送"),a("code",[t._v("action")]),t._v("到"),a("code",[t._v("store")]),t._v("来改变"),a("code",[t._v("state")]),t._v("。"),a("strong",[t._v("为了描述"),a("code",[t._v("action")]),t._v("如何改变"),a("code",[t._v("state tree")]),t._v("，你需要编写"),a("code",[t._v("reducers")])]),t._v("。（"),a("strong",[t._v("这一切都是在部署"),a("code",[t._v("store")]),t._v("，等待用户触发去"),a("code",[t._v("action")]),t._v("，然后再去"),a("code",[t._v("reducer")]),t._v("改变"),a("code",[t._v("state")])]),t._v("）")])]),t._v(" "),a("li",[a("p",[t._v("Reducer 只是一些纯函数，它接收两个参数："),a("strong",[t._v("先前的"),a("code",[t._v("state")]),t._v("和"),a("code",[t._v("action")])]),t._v("，并返回新的 "),a("code",[t._v("state")]),t._v("：")])]),t._v(" "),a("li",[a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Reducer Functionvar ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("someReducer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("在设计 Reducer 应当注意按照"),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Pure_function",target:"_blank",rel:"noopener noreferrer"}},[t._v("纯函数"),a("OutboundLink")],1),t._v("来"),a("strong",[t._v("设计")]),t._v("，纯函数有以下几个特征：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("不使用外界网络或数据库调用")]),t._v("（是dispatch去调用）")]),t._v(" "),a("li",[a("strong",[t._v("返回的值完全取决于其参数的值")])]),t._v(" "),a("li",[a("strong",[t._v("调用具有相同的参数集的一个纯函数始终返回相同的值")])])])]),t._v(" "),a("li",[a("p",[t._v("总之，"),a("strong",[t._v("一个函数在程序执行的过程中只会根据输入参数给出运算结果")]),t._v("，我们把这类函数称为“"),a("strong",[t._v("纯函数")]),t._v("”。"),a("strong",[t._v("纯函数由于不依赖外部变量，使得给定函数输入其返回结果永远不变")]),t._v("。")]),t._v(" "),a("ul",[a("li",[t._v("比如整数的加法函数，它接收两个整数值并返回一个整数值，对于给定的两个整数值，它的返回值永远是相同的整数值。")])])])]),t._v(" "),a("p",[t._v("State 的变化，会导致 View 的变化。但是，用户接触不到 State，只能接触到 View。所以，State 的变化必须是 View 导致的。"),a("strong",[t._v("Action 就是 View 发出的通知，表示 State 应该要发生变化了")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"如果还不明白我们看一下这个最基本的使用过程："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如果还不明白我们看一下这个最基本的使用过程："}},[t._v("#")]),t._v(" 如果还不明白我们看一下这个最基本的使用过程：")]),t._v(" "),a("p",[t._v("首先，我们通过 "),a("code",[t._v("Redux.createStore()")]),t._v(" 创建一个 store ，并把所有的 reducers 都作为其参数。\n我们看下这个只有一个 reducer 的示例：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意这儿使用 .push() 并不")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是好的方法。只是这样比较易于展示这")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 个示例。我将会在下一节解释原因。")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Reducer 函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("userReducer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ADD_USER'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 建立一个 store 并把 reducer 传递进去")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" store "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Redux"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userReducer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送我们的第一个 action 来改变 state")]),t._v("\nstore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ADD_USER'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  user"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Dan'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("简短的总结下这段代码发生了什么：")]),t._v(" "),a("ul",[a("li",[t._v("store 被建立了，并传递了一个 reducer。")]),t._v(" "),a("li",[t._v("reducer 规定应用程序的初始 state 是一个空数组。")]),t._v(" "),a("li",[t._v("我们发送了一个 action，其 "),a("code",[t._v("type")]),t._v(" 是 "),a("code",[t._v("ADD_USER")]),t._v("，携带的数据是"),a("code",[t._v("user: {name: 'Dan'}")]),t._v("，意为添加一个名为 Dan 的新用户")]),t._v(" "),a("li",[t._v("reducer 向 state 添加了新用户，并返回了更改后的 state，然后更新了 store")])]),t._v(" "),a("p",[a("strong",[t._v("在这个示例中 reducer 实际上被调用了两次")]),t._v("，一次是 store 被创建时，一次是使用 dispatch 发送 action 时。")]),t._v(" "),a("p",[t._v("当 store 被创建时，Redux 立即调用 reducer 并获取到 reducer 返回的初始 state。第一次调用 reducer 时 state 的值为 "),a("code",[t._v("undefined")]),t._v("，于是 reducer 返回了一个空的数组作为 store 的初始 state。")]),t._v(" "),a("p",[t._v("Reducer 在每次传递 action 时都会被调用。Action 只是描述了"),a("strong",[t._v("有事情发生了")]),t._v("这一事实，reducer 指明应用如何更新 state。")]),t._v(" "),a("p",[t._v("示例中传递 action 时第二次调用了 Reducer，Reducer 通过 action 携带的 type 属性的值 "),a("code",[t._v("ADD_USER")]),t._v(" 来判断如何处理 state。")]),t._v(" "),a("p",[t._v("可以把 Reducer 想想成一个漏斗，它接收先前的 state 和 action，输出新的 state 来更新 store：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://www.ferecord.com/wp-content/uploads/2016/06/Free-Converter.com-redux-article-3-04-16955450.jpg",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_3】基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3】基本使用"}},[t._v("#")]),t._v(" 3】基本使用")]),t._v(" "),a("h4",{attrs:{id:"①npm-安装redux插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#①npm-安装redux插件"}},[t._v("#")]),t._v(" ①npm 安装redux插件")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save redux\n")])])]),a("h4",{attrs:{id:"②创建store-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#②创建store-js"}},[t._v("#")]),t._v(" ②创建store.js")]),t._v(" "),a("p",[t._v("在redux文件夹下创建store.js文件：")]),t._v(" "),a("ul",[a("li",[t._v("我们首先要使用"),a("code",[t._v("createStore")]),t._v("所以我们需要导入相关内容。")]),t._v(" "),a("li",[t._v("调用"),a("code",[t._v("createStore(fn)")]),t._v("方法："),a("code",[t._v("createStore")]),t._v("函数接受另一个函数作为参数，返回新生成的 Store 对象。（这个参数就是我们需要传入的是"),a("code",[t._v("reducer")]),t._v("，意思是把reducer加入到store仓库中。reducer回调函数是通过action来计算新的state）")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createStore "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'redux'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./reducer'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" store "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"③创建reducer-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#③创建reducer-js"}},[t._v("#")]),t._v(" ③创建reducer.js")]),t._v(" "),a("p",[t._v("Store 收到 Action 以后，必须给出一个新的 State，这样 View 才会发生变化。这种 "),a("strong",[t._v("State 的计算过程")]),t._v("就叫做 Reducer。Reducer 是一个函数，"),a("strong",[t._v("它接受 Action 和当前 State 作为参数，返回一个新的 State")]),t._v("。（使用reducer来通过action改变state）")]),t._v(" "),a("p",[t._v("在src下创建redux文件夹，在这个文件夹下新建reducer.js文件：")]),t._v(" "),a("ul",[a("li",[t._v("所以下一步我们需要设置reducer函数，向里面传入两个固定参数，state和action")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'add'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'del'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"④创建action-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#④创建action-js"}},[t._v("#")]),t._v(" ④创建action.js")]),t._v(" "),a("p",[t._v("State 的变化，会导致 View 的变化。但是，用户接触不到 State，只能接触到 View。所以，State 的变化必须是 View 导致的。Action 就是 View 发出的通知，表示 State 应该要发生变化了。Action 是一个对象。"),a("strong",[t._v("其中的"),a("code",[t._v("type")]),t._v("属性是必须的，表示 Action 的名称。其他属性可以自由设置")]),t._v("，社区有一个"),a("a",{attrs:{href:"https://github.com/acdlite/flux-standard-action",target:"_blank",rel:"noopener noreferrer"}},[t._v("规范"),a("OutboundLink")],1),t._v("可以参考。payload是携带的参数（这里是一个字符串）")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" action "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ADD_TODO'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  payload"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Learn Redux'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("在src下创建redux文件夹，在这个文件夹下新建action.js文件：")]),t._v(" "),a("ul",[a("li",[t._v("设置action对象，一个action行为必须含有一个type参数，其它属性可以自己定义。\n"),a("ul",[a("li",[t._v("真正调用api获取数据的是"),a("code",[t._v("dispatch")]),t._v("，reducer是纯函数做的是传入相应"),a("code",[t._v("action.type")]),t._v("通过对应的写好的"),a("code",[t._v("action.type")]),t._v("对比做运算改变"),a("code",[t._v("state")]),t._v("的操作。")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'add'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" num\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("del")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'del'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" num\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),a("h4",{attrs:{id:"⑤在组件中使用redux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#⑤在组件中使用redux"}},[t._v("#")]),t._v(" ⑤在组件中使用redux")]),t._v(" "),a("ul",[a("li",[t._v("在view视图模板触发中需要"),a("strong",[t._v("使用"),a("code",[t._v("store.dispatch(action)")]),t._v("去分发"),a("code",[t._v("action")])]),t._v("，然后才能去对应"),a("code",[t._v("reducer")]),t._v("中的找到对应的"),a("code",[t._v("action.type")]),t._v("计算出新的"),a("code",[t._v("state")]),t._v("。（注意在我们"),a("code",[t._v("createStore(reducer)")]),t._v("的时候就传入了"),a("code",[t._v("reducer")]),t._v("，也就是已经注册好了"),a("code",[t._v("store")]),t._v("，到时候只需要"),a("code",[t._v("dispatch")]),t._v("分发的时候传入相应的"),a("code",[t._v("action")]),t._v("，就可以找到"),a("code",[t._v("reducer")]),t._v("中对应的action方法去修改"),a("code",[t._v("state")]),t._v("）")]),t._v(" "),a("li",[t._v("这一切都是在"),a("code",[t._v("redux")]),t._v("的"),a("code",[t._v("store")]),t._v("仓库中进行操作的，所以我们肯定还要导入"),a("code",[t._v("store")]),t._v("仓库才能使用。"),a("strong",[t._v("把"),a("code",[t._v("store")]),t._v("仓库中的"),a("code",[t._v("state")]),t._v("使用"),a("code",[t._v("store.getState()")]),t._v("全部取出，然后把这个状态加入到组件当中")]),t._v("。")]),t._v(" "),a("li",[t._v("在"),a("code",[t._v("reducer")]),t._v("中我们需要传入初始的"),a("code",[t._v("state")]),t._v("（或者旧状态）和用户行为"),a("code",[t._v("action")]),t._v("，然后返回的是通过不同的传入"),a("code",[t._v("action")]),t._v("行为改变后的"),a("code",[t._v("state")]),t._v("状态。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Component "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" store "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../redux/store'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" action "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../redux/action'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Home")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        num"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidMount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("subscribe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                Home"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button onClick"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("点我"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button onClick"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("del")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("点我"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_4】工作流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4】工作流程"}},[t._v("#")]),t._v(" 4】"),a("a",{attrs:{href:"http://www.ferecord.com/learning-react-redux.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("工作流程"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Redux是将整个应用状态存储到一个地方上称为"),a("strong",[t._v("store")]),t._v(",里面保存着一个状态树"),a("strong",[t._v("store tree")]),t._v(",组件可以派发(dispatch)行为(action)给store,而不是直接通知其他组件，组件内部通过订阅"),a("strong",[t._v("store")]),t._v("中的状态"),a("strong",[t._v("state")]),t._v("来刷新自己的视图。")]),t._v(" "),a("p",[t._v("从组件入手分析：Redux 提供了一个叫 "),a("code",[t._v("store")]),t._v(" 的统一仓储库，"),a("strong",[t._v("组件通过 "),a("code",[t._v("dispatch")])]),t._v(" 将 "),a("code",[t._v("state")]),t._v(" 直接传入 "),a("code",[t._v("store")]),t._v(" ，不用通过其他的组件。"),a("strong",[t._v("并且组件通过 "),a("code",[t._v("subscribe")])]),t._v(" 从 "),a("code",[t._v("store")]),t._v(" 获取到 "),a("code",[t._v("state")]),t._v(" 的改变。"),a("code",[t._v("store")]),t._v(" 就像一个管理 "),a("code",[t._v("state")]),t._v(" 改变的“"),a("strong",[t._v("中间人")]),t._v("”，组件之间的信息传递不必直接在彼此间进行，所有的 "),a("code",[t._v("state")]),t._v(" 变化都"),a("strong",[t._v("通过 store 这唯一数据源")]),t._v("。使用了 Redux ，"),a("strong",[t._v("所有的组件都可以从 store 中获取到所需的 state")]),t._v("， 他们也能从 store 获取到 state 的改变。这比组件之间互相传递数据清晰明朗的多。")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://www.ferecord.com/wp-content/uploads/2016/06/Free-Converter.com-redux-article-3-03-30585450.jpg",alt:""}})]),t._v(" "),a("p",[t._v("control层："),a("code",[t._v("store=createStore(reducer(state,action))")])]),t._v(" "),a("p",[t._v("view层："),a("code",[t._v("store.dispatch(action.fun(..))")])]),t._v(" "),a("p",[t._v("model层："),a("code",[t._v("state={xxx:store.getState()}")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://www.ruanyifeng.com/blogimg/asset/2016/bg2016091802.jpg",alt:""}})]),t._v(" "),a("p",[t._v("完全和"),a("code",[t._v("vuex")]),t._v("一模一样：reducer就是mutation。但是react需要组件订阅才能接收到state的更新。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200531201312485.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTIyMTAzNg==,size_16,color_FFFFFF,t_70",alt:"vuex"}})])])}),[],!1,null,null,null);s.default=n.exports}}]);