(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{449:function(t,a,_){"use strict";_.r(a);var s=_(42),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"操作系统中的进程和线程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#操作系统中的进程和线程"}},[t._v("#")]),t._v(" 操作系统中的"),_("a",{attrs:{href:"https://www.cnblogs.com/coder-programming/p/10595804.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("进程和线程"),_("OutboundLink")],1)]),t._v(" "),_("h2",{attrs:{id:"一、小栗子："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、小栗子："}},[t._v("#")]),t._v(" 一、小栗子：")]),t._v(" "),_("p",[t._v("我们生活中有许多关于进程和线程的小栗子，比如：我们使用打开微信软件，这时候就开启了一个进程，当我们在微信里面进行各种操作（查看朋友圈，扫一扫…），这么多的操作都是线程。")]),t._v(" "),_("p",[t._v("所以我们可以说**“进程”是包含“线程”的，“线程”是“进程”的一个子集。**")]),t._v(" "),_("h2",{attrs:{id:"二、简单总结进程和线程："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、简单总结进程和线程："}},[t._v("#")]),t._v(" 二、简单总结进程和线程：")]),t._v(" "),_("h5",{attrs:{id:"进程："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#进程："}},[t._v("#")]),t._v(" 进程：")]),t._v(" "),_("p",[t._v("指在系统中正在运行的一个应用程序；程序一旦运行就是进程；进程---"),_("strong",[t._v("系统资源分配的最小单位")]),t._v("。（站在操作系统维度上）")]),t._v(" "),_("h5",{attrs:{id:"线程："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#线程："}},[t._v("#")]),t._v(" 线程：")]),t._v(" "),_("p",[t._v("系统分配处理器时间资源的基本单元，或者说进程之内独立执行的一个单元执行流。线程---"),_("strong",[t._v("程序执行的最小单位")]),t._v("。（站在程序维度上）")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200701170413980.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTIyMTAzNg==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),_("h3",{attrs:{id:"_2-1-进程-线程-内存-文件-网络句柄"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-进程-线程-内存-文件-网络句柄"}},[t._v("#")]),t._v(" 2.1 进程(线程+内存+文件/网络句柄)")]),t._v(" "),_("p",[t._v("我们通过上面的图片进行进一步理解：")]),t._v(" "),_("h6",{attrs:{id:"内存-："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#内存-："}},[t._v("#")]),t._v(" "),_("strong",[t._v("“内存”：")])]),t._v(" "),_("p",[t._v("我们通常所理解的内存是我们所见到的(2G/4G/8G/16G)物理内存,它为什么会在进程之中呢？\n实际上，这里的内存是逻辑内存。指的是内存的寻址空间。"),_("strong",[t._v("每个进程的内存是相互独立的")]),t._v('。\n否则的话会出现一个问题：我们把指针的值改一改就指向其他进程的内存了，通过这样我们岂不是就可以看到其他进程中"微信"或者是"网上银行"的信息，\n这样的话，那我们的微信聊天记录或者是银行账户的信息就都被别人找到了，这是一个很危险的信号！显然这样是不可能的。')]),t._v(" "),_("h6",{attrs:{id:"文件-网络句柄-："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#文件-网络句柄-："}},[t._v("#")]),t._v(" "),_("strong",[t._v("“文件/网络句柄”：")])]),t._v(" "),_("p",[t._v("它们是所有的进程所共有的，例如打开同一个文件，去抢同一个网络的端口这样的操作是被允许的。")]),t._v(" "),_("h6",{attrs:{id:"线程-："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#线程-："}},[t._v("#")]),t._v(" "),_("strong",[t._v("“线程”：")])]),t._v(" "),_("p",[t._v("接下来，我们就要介绍一下我们的“线程”有关知识")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200701171600650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTIyMTAzNg==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),_("h3",{attrs:{id:"_2-2-线程-栈-pc-tls"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-线程-栈-pc-tls"}},[t._v("#")]),t._v(" 2.2 线程(栈+PC+TLS)")]),t._v(" "),_("h4",{attrs:{id:"_2-2-1-栈"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-栈"}},[t._v("#")]),t._v(" 2.2.1 栈:")]),t._v(" "),_("p",[t._v("我们通常都是说调用堆栈，其实这里的堆是没有含义的，调用堆栈就是调用栈的意思。\n那么我们的栈里面有什么呢？\n我们从主线程的入口main函数，会不断的进行函数调用，\n每次调用的时候，会把所有的参数和返回地址压入到栈中。")]),t._v(" "),_("h4",{attrs:{id:"_2-2-2-pc："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-pc："}},[t._v("#")]),t._v(" 2.2.2 PC：")]),t._v(" "),_("p",[t._v("Program Counter "),_("strong",[t._v("程序计数器")]),t._v("，操作系统真正运行的是一个个的线程，\n而我们的进程只是它的一个"),_("strong",[t._v("容器")]),t._v("。PC就是指向当前的指令，而这个指令是放在内存中。\n"),_("strong",[t._v("每个线程都有一串自己的指针，去指向自己当前所在内存的指针。")]),t._v("\n计算机绝大部分是存储程序性的，说的就是我们的数据和程序是存储在同一片内存里的\n这个内存中既有我们的数据变量又有我们的程序。所以我们的PC指针就是指向我们的内存的。")]),t._v(" "),_("h5",{attrs:{id:"_2-2-2-1-缓冲区溢出"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-1-缓冲区溢出"}},[t._v("#")]),t._v(" 2.2.2.1 缓冲区溢出")]),t._v(" "),_("p",[t._v("例如我们经常听到一个漏洞："),_("strong",[t._v("缓冲区溢出")]),t._v("\n这是什么意思呢？\n例如：我们有个地方要输入用户名，本来是用来存数据的地方。\n然后黑客把数据输入的特别长。这个长度超出了我们给数据存储的内存区，这时候跑到了\n我们给程序分配的一部分内存中。黑客就可以通过这种办法将他所要运行的代码\n写入到用户名框中，来植入进来。我们的解决方法就是，用用户名的长度来限制不要超过\n用户名的缓冲区的大小来解决。")]),t._v(" "),_("h4",{attrs:{id:"_2-3-tls-（线程本地储存）"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-tls-（线程本地储存）"}},[t._v("#")]),t._v(" 2.3 TLS:（线程本地储存）")]),t._v(" "),_("p",[t._v("全称：thread local storage\n之前我们看到每个进程都有自己独立的内存，这时候我们想，我们的线程有没有一块独立的内存呢?答案是有的，就是TLS。\n可以用来存储我们线程所独有的数据。\n可以看到：线程才是我们操作系统所真正去运行的，而进程呢，"),_("strong",[t._v("则是像容器一样他把需要的一些东西放在了一起，而把不需要的东西做了一层隔离，进行隔离开来。")])]),t._v(" "),_("h3",{attrs:{id:"_3-进程之间的是怎么进行交互的呢？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-进程之间的是怎么进行交互的呢？"}},[t._v("#")]),t._v(" 3. 进程之间的是怎么进行交互的呢？")]),t._v(" "),_("p",[t._v("通过"),_("code",[t._v("TCP/IP")]),t._v("的"),_("strong",[t._v("端口")]),t._v("来实现")]),t._v(" "),_("p",[_("code",[t._v("TCP/IP")]),t._v("三次握手：（需要实现能相互能"),_("strong",[t._v("接受发送消息")]),t._v("，而且"),_("strong",[t._v("验证消息是正确的")]),t._v("）")]),t._v(" "),_("p",[t._v("第一次握手：客户端发送一段消息给服务器")]),t._v(" "),_("p",[t._v("第二次握手：服务器收到客户端发的消息，并且发送一段自己的消息，和返回刚才接受的消息给客户端。")]),t._v(" "),_("p",[t._v("第三次握手：客户端收到消息，验证之前自己发送的消息是否正确，并且返回服务器发送的一段消息，服务器收到该消息判断是否正确。完成建立连接。")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200701180736168.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTIyMTAzNg==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),_("h3",{attrs:{id:"_4-线程之间又是怎样进行交互？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-线程之间又是怎样进行交互？"}},[t._v("#")]),t._v(" 4. 线程之间又是怎样进行交互？")]),t._v(" "),_("p",[t._v("线程的通信就比较简单，"),_("strong",[t._v("有一大块共享的内存")]),t._v("，只要大家的"),_("strong",[t._v("指针")]),t._v("是同一个就可以看到各自的内存。")]),t._v(" "),_("h3",{attrs:{id:"_5-小结："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-小结："}},[t._v("#")]),t._v(" 5.小结：")]),t._v(" "),_("p",[t._v("1.进程要分配一大部分的内存，而线程只需要分配一部分栈就可以了.\n2.一个系统至少有一个进程,一个进程至少有一个线程.\n3.进程是资源分配的最小单位，线程是程序执行的最小单位。\n4.一个线程可以创建和撤销另一个线程，同一个进程中的多个线程之间可以并发执行.")])])}),[],!1,null,null,null);a.default=r.exports}}]);