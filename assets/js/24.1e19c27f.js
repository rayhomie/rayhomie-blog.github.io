(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{367:function(t,s,n){"use strict";n.r(s);var a=n(42),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"词法环境-environment-闭包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#词法环境-environment-闭包"}},[t._v("#")]),t._v(" 词法环境[[environment]]--"),n("a",{attrs:{href:"https://www.bilibili.com/video/BV1gC4y1b7jU?t=4127",target:"_blank",rel:"noopener noreferrer"}},[t._v("闭包"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"闭包定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#闭包定义"}},[t._v("#")]),t._v(" 闭包定义")]),t._v(" "),n("p",[t._v("一些书籍中对于闭包的定义：")]),t._v(" "),n("ul",[n("li",[t._v("闭包是指有权访问另一个函数作用域中的变量的函数---《JavaScript高级程序设计》")]),t._v(" "),n("li",[t._v("闭包允许函数访问并操作函数外部的变量---《JavaScript忍者秘籍》")]),t._v(" "),n("li",[t._v("闭包使得函数可以继续访问定义时的词法作用域---《你不知道的JavaScript》")]),t._v(" "),n("li",[t._v("所有JavaScript函数都是闭包---《JavaScript权威指南》")])]),t._v(" "),n("p",[n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Closures",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN"),n("OutboundLink")],1),t._v("：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("函数")]),t._v("和对其"),n("strong",[t._v("周围状态（词法环境）"),n("strong",[t._v("的引用捆绑在一起构成")]),t._v("闭包")]),t._v("。")]),t._v(" "),n("li",[t._v("也就是说，闭包可以让你从内部函数访问外部函数作用域（作用域链）。")]),t._v(" "),n("li",[t._v("在JavaScript中，每当函数被创建，就会在函数生成时生成闭包。")])]),t._v(" "),n("h2",{attrs:{id:"environment"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#environment"}},[t._v("#")]),t._v(" [[Environment]]")]),t._v(" "),n("p",[n("code",[t._v("[[Environment]]")]),t._v("：内见属性")]),t._v(" "),n("ul",[n("li",[t._v("每个函数都有；")]),t._v(" "),n("li",[t._v("存放"),n("strong",[t._v("词法环境")]),t._v("的作用；")]),t._v(" "),n("li",[t._v("v8引擎中无法读写；")])]),t._v(" "),n("p",[t._v("对比之前学过的另一个内见属性"),n("code",[t._v("[[Prototype]]")])]),t._v(" "),n("ul",[n("li",[t._v("每个函数（构造函数）都有；")]),t._v(" "),n("li",[t._v("存放"),n("strong",[t._v("对象原型")]),t._v("的作用；")]),t._v(" "),n("li",[t._v("可以使用"),n("code",[t._v("__proto__")]),t._v("读写；")])]),t._v(" "),n("p",[n("code",[t._v("[[Environment]]")]),t._v("叫词法环境对象：")]),t._v(" "),n("ul",[n("li",[t._v("整个"),n("strong",[t._v("脚本文件执行前")]),t._v("会产生一个")]),t._v(" "),n("li",[n("strong",[t._v("函数实例创建后")]),t._v("会产生一个")])]),t._v(" "),n("p",[n("code",[t._v("[[Environment]]")]),t._v("属性记录了：当前函数的词法环境对象==>外层函数的词法环境对象==>全局的词法环境对象；这样就形成了"),n("strong",[t._v("作用域链")]),t._v("。")]),t._v(" "),n("p",[t._v("举例说明：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hi'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此时fn函数的[[Environment]]属性包括：作用域链")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.当前环境的记录")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fo")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hi'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.对外部词法环境的引用（全局词法环境）")]),t._v("\n")])])]),n("p",[t._v("闭包的例子：函数与词法环境捆绑")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//fn()执行后的返回值fo被引用到了全局变量x中")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("x")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("x")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//下面两种情况相当于创建了两个实例，")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当前面的函数执行完之后里面的变量和函数就被垃圾回收掉，")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//所以不影响后面函数的执行依然打印的是a=1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n")])])]),n("p",[t._v("我们分析一下上面函数"),n("strong",[t._v("不考虑词法环境的情况下")]),t._v("的执行调用栈：")]),t._v(" "),n("p",[n("code",[t._v("fn()")]),t._v("入栈；变量a入栈；"),n("code",[t._v("fn()")]),t._v("和a一起出栈；"),n("code",[t._v("x()")]),t._v("入栈；（此时出现问题了，"),n("code",[t._v("x()")]),t._v("在执行过程中需要找到a，但是a又没在执行栈中，并不符合我们要的预期）")]),t._v(" "),n("p",[t._v("此时就需要在函数与词法环境捆绑，形成闭包来实现这个问题：函数执行前就形成词法环境写入"),n("code",[t._v("[[Environment]]")]),t._v("属性中：此时fo函数内部词法环境是只有一个console.log函数，外层函数词法环境是"),n("code",[t._v("a:1")]),t._v("，全局词法环境为空。")]),t._v(" "),n("p",[t._v("函数中在执行过程中的内部变量，并不是同函数一样被加入到调用栈中，"),n("strong",[t._v("而是在函数执行前形成词法环境写入"),n("code",[t._v("[[Environment]]")]),t._v("属性中保存。只要有函数就会有闭包，只是v8中有垃圾回收机制，当函数A执行完时，返回另一个函数B，函数B又使用全局变量来保存，且函数B中引用了函数A中的变量，那么函数A中被引用的变量就永远不会被回收掉，需要我们手动进行变量回收。（需要注意的是：在js中定义的全局变量是不会被销毁的，因为随时都可能会用到这个变量，所以不能被销毁）")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" f2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("x")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("x")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果是这样的话，函数f在执行完毕之后，变量n依然会被垃圾回收掉。")]),t._v("\n")])])]),n("p",[n("a",{attrs:{href:"https://www.cnblogs.com/timetimetime/p/10509081.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("全局变量与局部变量生命周期"),n("OutboundLink")],1),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("全局变量： 在页面关闭后结束")]),t._v(" "),n("li",[t._v("局部变量： 在执行的作用域块执行完成后结束")]),t._v(" "),n("li",[t._v("综上， 局部变量会在其函数块执行之后自动解除，对于引用类型的局部作用域其引用关系会自动解除，大多数的引用类型的全局变量需要手动解除引用关系")])]),t._v(" "),n("p",[t._v("下面的例子中"),n("code",[t._v("const a")]),t._v("这个变量就是被存放在词法环境对象"),n("code",[t._v("[[Environment]]")]),t._v("中。（下图可以解释为什么要有闭包。）")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200805221143471.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTIyMTAzNg==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),n("p",[n("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200805221014250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTIyMTAzNg==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),n("h2",{attrs:{id:"理解垃圾回收问题："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#理解垃圾回收问题："}},[t._v("#")]),t._v(" 理解垃圾回收问题：")]),t._v(" "),n("p",[t._v("js变量回收规则：")]),t._v(" "),n("ul",[n("li",[t._v("在js中定义的全局变量是不会被销毁的，因为随时都可能会用到这个变量，所以不能被销毁。")]),t._v(" "),n("li",[t._v("具体引用关系的不会被销毁。\n"),n("ul",[n("li",[t._v("如果一个对象不被引用，那么这个对象就会被回收；")]),t._v(" "),n("li",[t._v("如果两个对象互相引用，但是没有被第3个对象所引用，那么这两个互相引用的对象也会被回收。")])])])]),t._v(" "),n("p",[t._v("通过下面两段代码进行对比分析：")]),t._v(" "),n("div",{staticClass:"language-jsx extra-class"},[n("pre",{pre:!0,attrs:{class:"language-jsx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n　　"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n　　"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n　　　　b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n　　　　console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n　　"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//11")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//11")]),t._v("\n")])])]),n("p",[n("strong",[t._v("分析：")]),t._v("\n在函数a中返回了一个匿名函数，在这个匿名函数中我们num++了一下，然后在函数外面执行了这个匿名函数函数，现在num是11，然后又执行了一次这个函数，你们应该是12吧，为什么不是呢？")]),t._v(" "),n("p",[n("strong",[t._v("原因：")]),t._v("\njs为了让没有必要的变量保存在内存中，（我们写的任何变量都是需要内存空间的）在不需要这个变量的时候它就会被销毁。所以每次执行一遍 a()() 则变量b就会被销毁。下次再执行，就会重新声明变量b，所以两次输出都是11。")]),t._v(" "),n("div",{staticClass:"language-jsx extra-class"},[n("pre",{pre:!0,attrs:{class:"language-jsx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("d")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("d")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n")])])]),n("p",[n("strong",[t._v("原因分析：")])]),t._v(" "),n("ul",[n("li",[t._v("函数a 被 变量d 引用，更准确的说是 函数a 里面的 匿名函数   被变量d所引用。")]),t._v(" "),n("li",[t._v("因为变量d 保存的是函数a执行完成后的值，而函数a执行完，返回了那个匿名函数，所以变量d等于匿名函数。\n-匿名函数因为使用了 函数a 中的 变量b 并且还被 变量 d所引用，所以就形成了一个闭包。")]),t._v(" "),n("li",[t._v("只要这个变量d不等于null的话，那么那个变量b会一直保存到变量d中不会被销毁。")]),t._v(" "),n("li",[t._v("所以两次执行的结果不一样")])]),t._v(" "),n("h3",{attrs:{id:"垃圾回收问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收问题"}},[t._v("#")]),t._v(" 垃圾回收问题")]),t._v(" "),n("h4",{attrs:{id:"_1-什么是js的垃圾回收机制？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是js的垃圾回收机制？"}},[t._v("#")]),t._v(" 1.什么是js的垃圾回收机制？")]),t._v(" "),n("p",[t._v("答：javascript中垃圾收集机制是自动回收的，不用人工操作，这让我们更专注于编辑代码上。 回收垃圾机制是定时执行的，具有周期性。")]),t._v(" "),n("h4",{attrs:{id:"_2-什么时候会有垃圾？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么时候会有垃圾？"}},[t._v("#")]),t._v(" 2.什么时候会有垃圾？")]),t._v(" "),n("p",[t._v("答：在作用域中当整个作用域中的代码执行完后，作用域中的变量和方法都会没用，此时就是被当做垃圾了。比如局部作用域，一个函数执行完，里面的变量就可以被销毁，其占用内存被释放。")]),t._v(" "),n("h4",{attrs:{id:"_3-垃圾回收方式？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-垃圾回收方式？"}},[t._v("#")]),t._v(" 3.垃圾回收方式？")]),t._v(" "),n("p",[t._v("答：常用的是标记清除：这样操作：一个变量--\x3e进入环境（被标记，有此标记为不能被清除）--\x3e执行--\x3e离开环境（被标记，这个标记告诉机制能被清除）--\x3e回收机制一段周期后，变量被清除。")]),t._v(" "),n("h4",{attrs:{id:"_4-为什么还要管理内存？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-为什么还要管理内存？"}},[t._v("#")]),t._v(" 4.为什么还要管理内存？")]),t._v(" "),n("p",[t._v("答：分配给web浏览器的内存比桌面的应用的内存少，这是出于安全考虑，为了防止运行js的网页耗尽系统内存导致系统崩溃。所以，开发者发现一旦数据不再用时，就将其值设为null来释放其引用（解除引用），这做法适用于全局变量和全局对象属性。")]),t._v(" "),n("p",[t._v("参考资料：")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://www.jianshu.com/p/00c747510df5",target:"_blank",rel:"noopener noreferrer"}},[t._v("js闭包变量回收问题"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://www.cnblogs.com/Ry-yuan/p/7675894.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("垃圾回收问题"),n("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);